on: [ push, pull_request ]
name: PHP-Tests
jobs:
  sl-scan:
    name: slcan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Instructions
      # 1. Setup JDK, Node.js, Python etc depending on your project type
      # 2. Compile or build the project before invoking scan
      #    Example: mvn compile, or npm install or pip install goes here
      # 3. Invoke Scan with the github token. Leave the workspace empty to use relative url

      - name: Perform Scan
        uses: ShiftLeftSecurity/scan-action@4d4c04908eff87430482f36340ad5706c14cf9a6
        env:
          WORKSPACE: ""
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SCAN_AUTO_BUILD: true
        with:
          output: reports
          # Scan auto-detects the languages in your project. To override uncomment the below variable and set the type
          # type: credscan,java
          # type: python

      - name: Upload report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports

  phpstan:
    name: phpstan-psalm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none

      - name: Install composer dependencies
        uses: ramsey/composer-install@v2

      - name: Run PHPStan
        run: ./vendor/bin/phpstan --error-format=github

      - name: PSALM
        run: ./vendor/bin/psalm

  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: PHP-CS-Fixer
        uses: docker://oskarstark/php-cs-fixer-ga

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.3,8.2 ]
        laravel: [ 10.* ]
        stability: [ prefer-stable ]
        include:
          - laravel: 10.*
            testbench: 8.*
            pest: 2.*


    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "pestphp/pest:${{ matrix.pest }}"  "pestphp/pest-plugin-laravel:${{ matrix.pest }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests
        run: vendor/bin/pest
